name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create application-prod.yml from Secrets
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-prod.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        shell: bash
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: clean bootJar -Dspring.profiles.active=prod

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/linku-backend-image .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/linku-backend-image

  run-docker-image-on-ec2:
    if: github.event_name == 'push'
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      - name: docker pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/linku-backend-image

      - name: stop & remove previous container if exists
        run: |
          CONTAINER_ID=$(sudo docker ps -aqf "name=^/github-actions-demo$")
          if [ -n "$CONTAINER_ID" ]; then
            echo "Stopping existing container: $CONTAINER_ID"
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          else
            echo "No existing container to stop."
          fi

      - name: run new container
        run: |
          echo "Running the new container with image: ${{ secrets.DOCKERHUB_USERNAME }}/linku-backend-image"
          sudo docker run --name github-actions-demo -d -p 8080:8080 \
               -e SPRING_PROFILES_ACTIVE=prod \
               ${{ secrets.DOCKERHUB_USERNAME }}/linku-backend-image

      - name: delete old docker image
        run: sudo docker system prune -f
